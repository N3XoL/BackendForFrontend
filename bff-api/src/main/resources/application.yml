schema: http
hostname: host.docker.internal
proxy-port: 888
authorization-prefix: /auth
proxy-uri: ${schema}://${hostname}:${proxy-port}
issuer: ${proxy-uri}${authorization-prefix}/realms/bff-realm

spring:
  application:
    name: bff-api
  cloud:
    gateway:
      routes:
        - id: bff-servlet
          uri: http://${RESOURCE_SERVER_SERVLET_HOST:host.docker.internal}:8081
          predicates:
            - Path=/api/servlet/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
            - TokenRelay=
            - SaveSession
            - StripPrefix=2
        - id: bff-reactive
          uri: http://${RESOURCE_SERVER_REACTIVE_HOST:host.docker.internal}:8082
          predicates:
            - Path=/api/reactive/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
            - TokenRelay=
            - SaveSession
            - StripPrefix=2

  security:
    oauth2:
      client:
        provider:
          bff-realm:
            issuer-uri: ${issuer}
        registration:
          bff-realm:
            provider: bff-realm
            authorization-grant-type: authorization_code
            client-id: ${KEYCLOAK_ID}
            client-secret: ${KEYCLOAK_SECRET}
            scope: openid, profile, email
            redirect-uri: ${proxy-uri}/bff/login/oauth2/code/{registrationId}
      resourceserver:
        jwt:
          issuer-uri: ${issuer}

logging:
  level:
    org.springframework.security: debug
    org.springframework.cloud.gateway: debug

server:
  forward-headers-strategy: framework