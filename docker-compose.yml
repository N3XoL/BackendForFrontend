services:
  bff-api:
    container_name: bff-api-container
    build: ./bff-api
    ports:
      - "8080:8080"
      - "5006:5005"
    depends_on:
      keycloak:
        condition: service_healthy
    environment:
      HOSTNAME: host.docker.internal
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      RESOURCE_SERVER_SERVLET_HOST: servlet-resource-server
      RESOURCE_SERVER_REACTIVE_HOST: reactive-resource-server
      KEYCLOAK_ID: bff-realm-confidential
      KEYCLOAK_SECRET: C3qrZQFvjxv3SzjHHmCjuFa5eP8IXb0s

  frontend:
    container_name: bff-api-frontend
    build: ./frontend
    ports:
      - "5173:5173"
    volumes:
      - bff-frontend-volume:/var/lib/frontend

  servlet-resource-server:
    container_name: servlet-resource-server-container
    build: ./servlet-resource-server-api
    ports:
      - "8081:8081"
      - "5005:5005"
    environment:
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005

  reactive-resource-server:
    container_name: reactive-resource-server-container
    build: ./reactive-resource-server
    ports:
      - "8082:8082"
      - "5007:5005"
    environment:
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      REACTIVE_DATABASE_URL: mysql-base:3306

  nginx:
    container_name: nginx-container
    image: nginx
    ports:
      - "888:888"
    volumes:
      - ./nginx/404.html:/usr/share/nginx/html/404.html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d/
    depends_on:
      bff-api:
        condition: service_started
      servlet-resource-server:
        condition: service_started
      reactive-resource-server:
        condition: service_started

  mysql-base:
    container_name: bff-database-mysql-container
    image: mysql:latest
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD", "-s"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - bff-mysql-volume:/var/lib/mysql
      - ./db.init:/docker-entrypoint-initdb.d

  keycloak:
    container_name: bff-keycloak-container
    image: quay.io/keycloak/keycloak:latest
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://mysql-base:3306/keycloak
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: root
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_HTTP_PORT: 8090
      KC_PROXY_HEADERS: xforwarded
      KC_HOSTNAME: http://host.docker.internal:888/auth
      KC_HOSTNAME_ADMIN: http://host.docker.internal:888/auth
      KC_HTTP_RELATIVE_PATH: /auth/
    ports:
      - "8090:8090"
      - "9000:9000"
    depends_on:
      mysql-base:
        condition: service_healthy
    command:
      - start-dev
      - --import-realm
    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "
      public class HealthCheck { 
        public static void main(String[] args) throws Throwable { 
          System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); 
        } 
      }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/auth/health/ready']
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - bff-keycloak-volume:/var/lib/keycloak
      - ./keycloak-realm/realm-export.json:/opt/keycloak/data/import/realm-export.json

volumes:
  bff-mysql-volume:
  bff-keycloak-volume:
  bff-frontend-volume: